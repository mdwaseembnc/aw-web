#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <string.h>
#include <stdlib.h>
int main()
{
    int pipe_fd[2];
    if (pipe(pipe_fd) == -1)
    {
        perror("pipe creation failed");
        return 1;
    }
    pid_t child_pid = fork();
    if (child_pid == -1)
    {
        perror("Fork failed");
        return -1;
    }
    if (child_pid > 0)
    {
        close(pipe_fd[0]);
        char message[] = "Hello from parent!";
        if (write(pipe_fd[1], message, strlen(message) + 1) == -1)
        {
            perror("Write to pipe failed");
            return 1;
        }
        close(pipe_fd[1]);
    }
    else
    {
        close(pipe_fd[1]);
        char buffer[50];
        size_t bytes_read;
        bytes_read = read(pipe_fd[0], buffer, sizeof(buffer));
        if (bytes_read == -1)
        {
            perror("read from pipe failed");
            return 1;
        }
        buffer[bytes_read] = '\0';
        printf("Child process recieved message:%s\n", buffer);
        close(pipe_fd[0]);
    }
    return 0;
}